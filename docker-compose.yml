services:
  postgres:
    image: postgres:15-alpine
    env_file: .env
    environment:
      POSTGRES_DB:    ${POSTGRES_DB}
      POSTGRES_USER:  ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - 5672:5672   # AMQP
      - 15672:15672 # Management UI

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025   # SMTP
      - 8025:8025   # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    env_file: .env
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      mailhog:
        condition: service_healthy
    ports:
      - 3001:3001

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    depends_on:
      - backend
    ports:
      - 3000:3000